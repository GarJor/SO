_____ /clab2_1/buscaLetra.c:    Programa recibe como parametro una letra i un fitxero y escribe en el stdOUT todas las posiciones del fitxero donde aparece la letra   (TAGS: read, write, char, strcmp, entero-representacion-interna, control_error)
_____ /clab2_1/tachaCaracteres.c:   Programa que recibe como parametro el nombre de un fitxero y por entrada estandardlas posiciones que ocupan los caracteres que se quieren tachar. el codigo accede directamente a cada posicion y substituira el caracter por 'X'. El codigp comprueba que la posicion forma parte del fitxero    (TAGS: read, write, lseek-O_WRONLY, entero-representacion-interna, control_errors)
_____ /clab2_1/respuestas.txt:    Teoria    (TAGS: mknod, pipe, pipe_con_nombre, comunicacion_con_pipe)
_____ /clab2_1/tachaVocales.c:    Programa que busca, mutando a buscaLetra, todas las vocales minusculas del fitxero que recibe por parametro y las tacha, mutando tachaCaracteres. La comunicacion necesaria se hace con pipes sin nombre enre procesos. (TAGS: pipe, close, dup2, fork, waitpid, execlp, pipe_sin_nombre, comunicacion_con_pipe)
_____ /clab2/set_holes.c:   Programa que recibe como primer parametro un fitxero con posiciones (enteros) y como segundo un fitxero de texto con enteros, escribe 0 en el segundo fitxero en las posiciones leidas en el primero (TAGS: open-O_RDONLY-O_WRONLY, lseek, write, entero-representacion-interna)
_____ /clab2/race_cond.c:   Programa que recibe un entero por parametro, que servira para simcronizar los writes/read del padre y el hijo utilizando los bloqueos de write/read cuando se usa pipe sin nombre   (TAGS: pipe_sin_nombre, comunicacion_con_pipe, write, read, sincronizar, sync)
_____ /clab2/answers.txt:   Teoria    (TAGS: inodo-libre, inodo-directorio, enlaces_a_inodo, lista_llamadas_a_sistema, syscalls, strace, df, numero_llamadas_sistema)
_____ /clab2/positions:   Parametre 1 de set_holes que conte els numeros 0, 4, 5, i 9   (TAGS: exemple, entero-representacion-interna)
_____ /clab2/0_to_9.txt:    Parametre 2 de set_holes  (TAGS: exemple)
_____ /fork-signal-essencials.txt:    Vaines del primer parcial   (TAGS: signals, fork-sequencial, fork-concurrente, handlers, sigaction, sigprocmask)
_____ /fastInit.c:    sample per lexam.
_____ /queFa.c:   Soc jo :)
_____ /clab2_2/respuestas.txt:    Teoria    (TAGS: softlink, hardlink, inodo, sbrk, memoria, heap)
_____ /clab2_2/suma_enteros.c:    Recibe como parámetro el nombre de un fichero que contiene números enteros en formato interno sin ninguna separación. Lee los números del fichero y los suma. El resultado de la suma se imprime por el terminal y en un fichero ("suma.txt"). Si el fitxero de salida ya existe se trunca, sino se crea    (TAGS: open-O_CREAT-O_TRUNC, permisos, entero-representacion-interna, write)
_____ /clab2_2/cuenta_lineas.c:   Programa que emula el comando: cat <parametro1> | grep <parametro2> | wc -l Para ello utiliza comunicacion entre procesos padre-hijo con pipes sin nombres.   (TAGS: sync, sincronizar, comunicacion_con_pipe, pipe_sin_nombre, fork, execlp, dup2, close)
_____ /clab2_2/ordenar.c:   Programa que recibe como parámetro un fichero que contiene caracteres numéricos del 0 al 9 sin espacios y sin carácter de final de línea. Ordenar ascendentemente los números leyendo y escribiendo en el mismo fichero. El algoritmo lee caracteres adyacentes de dos en dos empezando en la posición 0, y si no están en el orden correcto los intercambia. Repite el procedimiento hasta que ya no hace ningun canvio    (TAGS:  read, lseek-SEEK_SET, lseek-SEEK_CUR, lseek-SEEK_END, write)
_____ /clab2_2/numeros.txt:  Parametre de suma_enteros conte els numeros 0, 4, 5, i 9   (TAGS: exemple, entero-representacion-interna)
_____ /clab2_2/para-ordenar.txt:  Parametre de ordenar   (TAGS: exemple)
_____ /clab2_2/sflink:    Softlink a numeros.txt   (TAGS: exemple)
_____ /MrRobb/resumE-S_MrRobb.txt: Teoria resumida entrades i sortides del github de MrRobb
_____ /MrRobb/resumE-S_MrRobb.pdf: Teoria resumida entrades i sortides del github de MrRobb
